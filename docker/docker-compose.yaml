version: "3.7"

services:
  app:
    container_name: ${NAME}
    image: ${IMAGE}:latest
    ports:
      - 3000:3000
    environment:
      DEBUG: "1"
      GRAPHQL_PLAYGROUND: "1"
      SWAGGER: "1"
    depends_on:
      - keycloak
      - postgres
      - redis

  dev:
    container_name: ${NAME}-dev
    image: busybox
    command: tail -f /dev/null
    depends_on:
      - hasura
      - jaeger
      - keycloak
      - postgres
      - redis

  keycloak:
    container_name: ${NAME}-keycloak
    image: jboss/keycloak:16.1.0
    restart: always
    ports:
      - 28080:8080
    volumes:
      - ./realm-export.json:/tmp/realm-export.json:ro
    environment:
      JAVA_OPTS_APPEND: "-Dkeycloak.profile.feature.upload_scripts=enabled"
      DB_ADDR: keycloak-postgres
      DB_DATABASE: postgres
      DB_PASSWORD: postgres
      DB_SCHEMA: public
      DB_USER: postgres
      DB_VENDOR: POSTGRES
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_PASSWORD: P@ssw0rd
      KEYCLOAK_USER: admin
      PROXY_ADDRESS_FORWARDING: "true"
    depends_on:
      - keycloak-postgres

  keycloak-postgres:
    image: postgres:12
    container_name: ${NAME}-keycloak-postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - keycloak-postgres:/var/lib/postgresql/data

  postgres:
    image: postgres:12
    container_name: ${NAME}-postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.0.4
    container_name: ${NAME}-redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ${NAME}-jaeger
    restart: always
    ports:
      - 14268:14268
      - 16686:16686
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: "9411"

  hasura:
    image: hasura/graphql-engine:v2.1.1
    container_name: ${NAME}-hasura
    ports:
      - 8080:8080
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_JWT_SECRET: '{"jwk_url":"http://keycloak:8080/auth/realms/main/protocol/openid-connect/certs"}'
      HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT: 30
      HASURA_GRAPHQL_NO_OF_RETRIES: 10
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      NESTJS_BASE_URL: http://app:3000
      NESTJS_EVENT_WEBHOOK_ENDPOINT: http://app:3000/hasura/events
      NESTJS_EVENT_WEBHOOK_SHARED_SECRET: ${NESTJS_EVENT_WEBHOOK_SHARED_SECRET}

volumes:
  keycloak-postgres:
    name: keycloak-postgres-${NAME}
  postgres:
    name: postgres-${NAME}
  redis:
    name: redis-${NAME}

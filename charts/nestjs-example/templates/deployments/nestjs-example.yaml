apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nestjs-example.fullname" . }}-nestjs-example
  labels:
    app: {{ template "nestjs-example.name" . }}-nestjs-example
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "nestjs-example.name" . }}-nestjs-example
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "nestjs-example.name" . }}-nestjs-example
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 89
              preference:
                matchExpressions:
                  - key: application/state
                    operator: In
                    values:
                      - stateless
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "nestjs-example.name" . }}-nestjs-example
      containers:
        - name: {{ template "nestjs-example.fullname" . }}-nestjs-example
          image: {{ .Values.images.nestjsExample.repository }}:{{ .Values.images.nestjsExample.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.config.nestjsExample.resources.requests.cpu }}
              memory: {{ .Values.config.nestjsExample.resources.requests.memory }}
            limits:
              cpu: {{ .Values.config.nestjsExample.resources.limits.cpu }}
              memory: {{ .Values.config.nestjsExample.resources.limits.memory }}
          ports:
            - name: container
              containerPort: 3000
          env:
            - name: SECRET
              valueFrom:
                secretKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: secret
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: redis_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: postgres_database
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: postgres_host
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: postgres_password
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: postgres_port
            # - name: POSTGRES_URL
            #   valueFrom:
            #     configMapKeyRef:
            #         name: {{ template "nestjs-example.fullname" . }}
            #         key: postgres_url
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                    name: {{ template "nestjs-example.fullname" . }}
                    key: postgres_username
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}

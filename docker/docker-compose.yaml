version: "3.7"

services:
  app:
    container_name: ${NAME}
    image: ${IMAGE}:latest
    ports:
      - 3000:3000
    environment:
      DEBUG: "1"
      GRAPHQL_PLAYGROUND: "1"
      SWAGGER: "1"
    depends_on:
      - jaeger
      - keycloak
      - postgres
      - redis

  dev:
    container_name: dev
    image: busybox
    command: tail -f /dev/null
    depends_on:
      - jaeger
      - keycloak
      - postgres
      - redis

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:17.0.0
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./realm-export.json:/tmp/realm-export.json:ro
      - ./providers:/opt/keycloak/providers
    entrypoint:
      - sh
      - -c
      - |
        /opt/keycloak/bin/kc.sh build
        IMPORT_FLAG_FILE=/opt/keycloak/imported.flag
        if [ "$${KEYCLOAK_IMPORT}" != "" ]; then
          if [ ! -f "$$IMPORT_FLAG_FILE" ]; then
            /opt/keycloak/bin/kc.sh import --file "$$KEYCLOAK_IMPORT"
            touch "$$IMPORT_FLAG_FILE"
          fi
        fi
        /opt/keycloak/bin/kc.sh start-dev
    environment:
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: P@ssw0rd

  postgres:
    image: postgres:12
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.0.4
    container_name: redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    ports:
      - 14268:14268
      - 16686:16686
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: "9411"

volumes:
  postgres:
    name: postgres-${NAME}
  redis:
    name: redis-${NAME}
